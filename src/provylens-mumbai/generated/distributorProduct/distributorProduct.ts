// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class eventAddDistributorProduct extends ethereum.Event {
  get params(): eventAddDistributorProduct__Params {
    return new eventAddDistributorProduct__Params(this);
  }
}

export class eventAddDistributorProduct__Params {
  _event: eventAddDistributorProduct;

  constructor(event: eventAddDistributorProduct) {
    this._event = event;
  }

  get _dpId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _manufacturerAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _mdId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _name(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get _description(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get _unit(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _price(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _date(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get _expiryDate(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class eventDeleteDistributorProduct extends ethereum.Event {
  get params(): eventDeleteDistributorProduct__Params {
    return new eventDeleteDistributorProduct__Params(this);
  }
}

export class eventDeleteDistributorProduct__Params {
  _event: eventDeleteDistributorProduct;

  constructor(event: eventDeleteDistributorProduct) {
    this._event = event;
  }

  get _dpId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class eventUpdateDistributorProductUints extends ethereum.Event {
  get params(): eventUpdateDistributorProductUints__Params {
    return new eventUpdateDistributorProductUints__Params(this);
  }
}

export class eventUpdateDistributorProductUints__Params {
  _event: eventUpdateDistributorProductUints;

  constructor(event: eventUpdateDistributorProductUints) {
    this._event = event;
  }

  get _dpId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class distributorProduct__distributorProductsIdToStructMappingResult {
  value0: Bytes;
  value1: Bytes;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;

  constructor(
    value0: Bytes,
    value1: Bytes,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBytes(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    return map;
  }

  getDp_name(): Bytes {
    return this.value0;
  }

  getDp_description(): Bytes {
    return this.value1;
  }

  getDp_unit(): BigInt {
    return this.value2;
  }

  getDp_price(): BigInt {
    return this.value3;
  }

  getDp_date(): BigInt {
    return this.value4;
  }

  getDp_expiryDate(): BigInt {
    return this.value5;
  }

  getDp_status(): boolean {
    return this.value6;
  }
}

export class distributorProduct__getAllProductsOfDistributorResultValue0Struct extends ethereum.Tuple {
  get manufacturerAddress(): Array<Address> {
    return this[0].toAddressArray();
  }

  get md_id(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get dp_name(): Bytes {
    return this[2].toBytes();
  }

  get dp_description(): Bytes {
    return this[3].toBytes();
  }

  get dp_unit(): BigInt {
    return this[4].toBigInt();
  }

  get dp_price(): BigInt {
    return this[5].toBigInt();
  }

  get dp_date(): BigInt {
    return this[6].toBigInt();
  }

  get dp_expiryDate(): BigInt {
    return this[7].toBigInt();
  }

  get dp_status(): boolean {
    return this[8].toBoolean();
  }
}

export class distributorProduct__getSingleDistributorProductResultValue0Struct extends ethereum.Tuple {
  get manufacturerAddress(): Array<Address> {
    return this[0].toAddressArray();
  }

  get md_id(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get dp_name(): Bytes {
    return this[2].toBytes();
  }

  get dp_description(): Bytes {
    return this[3].toBytes();
  }

  get dp_unit(): BigInt {
    return this[4].toBigInt();
  }

  get dp_price(): BigInt {
    return this[5].toBigInt();
  }

  get dp_date(): BigInt {
    return this[6].toBigInt();
  }

  get dp_expiryDate(): BigInt {
    return this[7].toBigInt();
  }

  get dp_status(): boolean {
    return this[8].toBoolean();
  }
}

export class distributorProduct extends ethereum.SmartContract {
  static bind(address: Address): distributorProduct {
    return new distributorProduct("distributorProduct", address);
  }

  distributorAddressToproductsIdMapping(
    param0: Address,
    param1: BigInt
  ): BigInt {
    let result = super.call(
      "distributorAddressToproductsIdMapping",
      "distributorAddressToproductsIdMapping(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_distributorAddressToproductsIdMapping(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "distributorAddressToproductsIdMapping",
      "distributorAddressToproductsIdMapping(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  distributorProductsIdToStructMapping(
    param0: BigInt
  ): distributorProduct__distributorProductsIdToStructMappingResult {
    let result = super.call(
      "distributorProductsIdToStructMapping",
      "distributorProductsIdToStructMapping(uint256):(bytes,bytes,uint128,uint128,uint32,uint32,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new distributorProduct__distributorProductsIdToStructMappingResult(
      result[0].toBytes(),
      result[1].toBytes(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean()
    );
  }

  try_distributorProductsIdToStructMapping(
    param0: BigInt
  ): ethereum.CallResult<
    distributorProduct__distributorProductsIdToStructMappingResult
  > {
    let result = super.tryCall(
      "distributorProductsIdToStructMapping",
      "distributorProductsIdToStructMapping(uint256):(bytes,bytes,uint128,uint128,uint32,uint32,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new distributorProduct__distributorProductsIdToStructMappingResult(
        value[0].toBytes(),
        value[1].toBytes(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean()
      )
    );
  }

  getAllProductsOfDistributor(
    _distributorAddress: Address
  ): Array<distributorProduct__getAllProductsOfDistributorResultValue0Struct> {
    let result = super.call(
      "getAllProductsOfDistributor",
      "getAllProductsOfDistributor(address):((address[],uint256[],bytes,bytes,uint128,uint128,uint32,uint32,bool)[])",
      [ethereum.Value.fromAddress(_distributorAddress)]
    );

    return result[0].toTupleArray<
      distributorProduct__getAllProductsOfDistributorResultValue0Struct
    >();
  }

  try_getAllProductsOfDistributor(
    _distributorAddress: Address
  ): ethereum.CallResult<
    Array<distributorProduct__getAllProductsOfDistributorResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllProductsOfDistributor",
      "getAllProductsOfDistributor(address):((address[],uint256[],bytes,bytes,uint128,uint128,uint32,uint32,bool)[])",
      [ethereum.Value.fromAddress(_distributorAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        distributorProduct__getAllProductsOfDistributorResultValue0Struct
      >()
    );
  }

  getDistributorProductIds(): Array<BigInt> {
    let result = super.call(
      "getDistributorProductIds",
      "getDistributorProductIds():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getDistributorProductIds(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getDistributorProductIds",
      "getDistributorProductIds():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getSingleDistributorProduct(
    _dpId: BigInt
  ): distributorProduct__getSingleDistributorProductResultValue0Struct {
    let result = super.call(
      "getSingleDistributorProduct",
      "getSingleDistributorProduct(uint256):((address[],uint256[],bytes,bytes,uint128,uint128,uint32,uint32,bool))",
      [ethereum.Value.fromUnsignedBigInt(_dpId)]
    );

    return changetype<
      distributorProduct__getSingleDistributorProductResultValue0Struct
    >(result[0].toTuple());
  }

  try_getSingleDistributorProduct(
    _dpId: BigInt
  ): ethereum.CallResult<
    distributorProduct__getSingleDistributorProductResultValue0Struct
  > {
    let result = super.tryCall(
      "getSingleDistributorProduct",
      "getSingleDistributorProduct(uint256):((address[],uint256[],bytes,bytes,uint128,uint128,uint32,uint32,bool))",
      [ethereum.Value.fromUnsignedBigInt(_dpId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<
        distributorProduct__getSingleDistributorProductResultValue0Struct
      >(value[0].toTuple())
    );
  }
}

export class AddDistributorProductCall extends ethereum.Call {
  get inputs(): AddDistributorProductCall__Inputs {
    return new AddDistributorProductCall__Inputs(this);
  }

  get outputs(): AddDistributorProductCall__Outputs {
    return new AddDistributorProductCall__Outputs(this);
  }
}

export class AddDistributorProductCall__Inputs {
  _call: AddDistributorProductCall;

  constructor(call: AddDistributorProductCall) {
    this._call = call;
  }

  get _manufacturerAddress(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _mdId(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _name(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _description(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _unit(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _date(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _expiryDate(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class AddDistributorProductCall__Outputs {
  _call: AddDistributorProductCall;

  constructor(call: AddDistributorProductCall) {
    this._call = call;
  }
}

export class DeleteDistributorProductCall extends ethereum.Call {
  get inputs(): DeleteDistributorProductCall__Inputs {
    return new DeleteDistributorProductCall__Inputs(this);
  }

  get outputs(): DeleteDistributorProductCall__Outputs {
    return new DeleteDistributorProductCall__Outputs(this);
  }
}

export class DeleteDistributorProductCall__Inputs {
  _call: DeleteDistributorProductCall;

  constructor(call: DeleteDistributorProductCall) {
    this._call = call;
  }

  get _dpId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteDistributorProductCall__Outputs {
  _call: DeleteDistributorProductCall;

  constructor(call: DeleteDistributorProductCall) {
    this._call = call;
  }
}

export class UpdateDistributorProductUintsCall extends ethereum.Call {
  get inputs(): UpdateDistributorProductUintsCall__Inputs {
    return new UpdateDistributorProductUintsCall__Inputs(this);
  }

  get outputs(): UpdateDistributorProductUintsCall__Outputs {
    return new UpdateDistributorProductUintsCall__Outputs(this);
  }
}

export class UpdateDistributorProductUintsCall__Inputs {
  _call: UpdateDistributorProductUintsCall;

  constructor(call: UpdateDistributorProductUintsCall) {
    this._call = call;
  }

  get _dpId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateDistributorProductUintsCall__Outputs {
  _call: UpdateDistributorProductUintsCall;

  constructor(call: UpdateDistributorProductUintsCall) {
    this._call = call;
  }
}
