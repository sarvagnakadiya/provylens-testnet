// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class eventAddSupplierProduct extends ethereum.Event {
  get params(): eventAddSupplierProduct__Params {
    return new eventAddSupplierProduct__Params(this);
  }
}

export class eventAddSupplierProduct__Params {
  _event: eventAddSupplierProduct;

  constructor(event: eventAddSupplierProduct) {
    this._event = event;
  }

  get _spid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _address(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _name(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _description(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get _unit(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _date(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _expiryDate(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get _timeAdded(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class eventDeleteSupplierProduct extends ethereum.Event {
  get params(): eventDeleteSupplierProduct__Params {
    return new eventDeleteSupplierProduct__Params(this);
  }
}

export class eventDeleteSupplierProduct__Params {
  _event: eventDeleteSupplierProduct;

  constructor(event: eventDeleteSupplierProduct) {
    this._event = event;
  }

  get _spId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class eventUpdateSupplierProductUints extends ethereum.Event {
  get params(): eventUpdateSupplierProductUints__Params {
    return new eventUpdateSupplierProductUints__Params(this);
  }
}

export class eventUpdateSupplierProductUints__Params {
  _event: eventUpdateSupplierProductUints;

  constructor(event: eventUpdateSupplierProductUints) {
    this._event = event;
  }

  get _spId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class supplierProduct__getAllProductsOfSupplierResultValue0Struct extends ethereum.Tuple {
  get supplierAddress(): Address {
    return this[0].toAddress();
  }

  get sp_name(): Bytes {
    return this[1].toBytes();
  }

  get sp_description(): Bytes {
    return this[2].toBytes();
  }

  get sp_unit(): BigInt {
    return this[3].toBigInt();
  }

  get sp_price(): BigInt {
    return this[4].toBigInt();
  }

  get sp_date(): BigInt {
    return this[5].toBigInt();
  }

  get sp_expiryDate(): BigInt {
    return this[6].toBigInt();
  }

  get sp_status(): boolean {
    return this[7].toBoolean();
  }
}

export class supplierProduct__getSingleSupplierProductResultValue0Struct extends ethereum.Tuple {
  get supplierAddress(): Address {
    return this[0].toAddress();
  }

  get sp_name(): Bytes {
    return this[1].toBytes();
  }

  get sp_description(): Bytes {
    return this[2].toBytes();
  }

  get sp_unit(): BigInt {
    return this[3].toBigInt();
  }

  get sp_price(): BigInt {
    return this[4].toBigInt();
  }

  get sp_date(): BigInt {
    return this[5].toBigInt();
  }

  get sp_expiryDate(): BigInt {
    return this[6].toBigInt();
  }

  get sp_status(): boolean {
    return this[7].toBoolean();
  }
}

export class supplierProduct__supplierProductsIdToStructMappingResult {
  value0: Address;
  value1: Bytes;
  value2: Bytes;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;

  constructor(
    value0: Address,
    value1: Bytes,
    value2: Bytes,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    map.set("value2", ethereum.Value.fromBytes(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    return map;
  }

  getSupplierAddress(): Address {
    return this.value0;
  }

  getSp_name(): Bytes {
    return this.value1;
  }

  getSp_description(): Bytes {
    return this.value2;
  }

  getSp_unit(): BigInt {
    return this.value3;
  }

  getSp_price(): BigInt {
    return this.value4;
  }

  getSp_date(): BigInt {
    return this.value5;
  }

  getSp_expiryDate(): BigInt {
    return this.value6;
  }

  getSp_status(): boolean {
    return this.value7;
  }
}

export class supplierProduct extends ethereum.SmartContract {
  static bind(address: Address): supplierProduct {
    return new supplierProduct("supplierProduct", address);
  }

  getAllProductsOfSupplier(
    _supplierAddress: Address
  ): Array<supplierProduct__getAllProductsOfSupplierResultValue0Struct> {
    let result = super.call(
      "getAllProductsOfSupplier",
      "getAllProductsOfSupplier(address):((address,bytes,bytes,uint128,uint128,uint32,uint32,bool)[])",
      [ethereum.Value.fromAddress(_supplierAddress)]
    );

    return result[0].toTupleArray<
      supplierProduct__getAllProductsOfSupplierResultValue0Struct
    >();
  }

  try_getAllProductsOfSupplier(
    _supplierAddress: Address
  ): ethereum.CallResult<
    Array<supplierProduct__getAllProductsOfSupplierResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllProductsOfSupplier",
      "getAllProductsOfSupplier(address):((address,bytes,bytes,uint128,uint128,uint32,uint32,bool)[])",
      [ethereum.Value.fromAddress(_supplierAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        supplierProduct__getAllProductsOfSupplierResultValue0Struct
      >()
    );
  }

  getSingleSupplierProduct(
    _spId: BigInt
  ): supplierProduct__getSingleSupplierProductResultValue0Struct {
    let result = super.call(
      "getSingleSupplierProduct",
      "getSingleSupplierProduct(uint256):((address,bytes,bytes,uint128,uint128,uint32,uint32,bool))",
      [ethereum.Value.fromUnsignedBigInt(_spId)]
    );

    return changetype<
      supplierProduct__getSingleSupplierProductResultValue0Struct
    >(result[0].toTuple());
  }

  try_getSingleSupplierProduct(
    _spId: BigInt
  ): ethereum.CallResult<
    supplierProduct__getSingleSupplierProductResultValue0Struct
  > {
    let result = super.tryCall(
      "getSingleSupplierProduct",
      "getSingleSupplierProduct(uint256):((address,bytes,bytes,uint128,uint128,uint32,uint32,bool))",
      [ethereum.Value.fromUnsignedBigInt(_spId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<supplierProduct__getSingleSupplierProductResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getSupplierProductIds(): Array<BigInt> {
    let result = super.call(
      "getSupplierProductIds",
      "getSupplierProductIds():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getSupplierProductIds(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getSupplierProductIds",
      "getSupplierProductIds():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  supplierAddressToproductsIdMapping(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "supplierAddressToproductsIdMapping",
      "supplierAddressToproductsIdMapping(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_supplierAddressToproductsIdMapping(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "supplierAddressToproductsIdMapping",
      "supplierAddressToproductsIdMapping(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supplierProductsIdToStructMapping(
    param0: BigInt
  ): supplierProduct__supplierProductsIdToStructMappingResult {
    let result = super.call(
      "supplierProductsIdToStructMapping",
      "supplierProductsIdToStructMapping(uint256):(address,bytes,bytes,uint128,uint128,uint32,uint32,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new supplierProduct__supplierProductsIdToStructMappingResult(
      result[0].toAddress(),
      result[1].toBytes(),
      result[2].toBytes(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean()
    );
  }

  try_supplierProductsIdToStructMapping(
    param0: BigInt
  ): ethereum.CallResult<
    supplierProduct__supplierProductsIdToStructMappingResult
  > {
    let result = super.tryCall(
      "supplierProductsIdToStructMapping",
      "supplierProductsIdToStructMapping(uint256):(address,bytes,bytes,uint128,uint128,uint32,uint32,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new supplierProduct__supplierProductsIdToStructMappingResult(
        value[0].toAddress(),
        value[1].toBytes(),
        value[2].toBytes(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean()
      )
    );
  }
}

export class AddSupplierProductCall extends ethereum.Call {
  get inputs(): AddSupplierProductCall__Inputs {
    return new AddSupplierProductCall__Inputs(this);
  }

  get outputs(): AddSupplierProductCall__Outputs {
    return new AddSupplierProductCall__Outputs(this);
  }
}

export class AddSupplierProductCall__Inputs {
  _call: AddSupplierProductCall;

  constructor(call: AddSupplierProductCall) {
    this._call = call;
  }

  get _name(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _description(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _unit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _date(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _expiryDate(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class AddSupplierProductCall__Outputs {
  _call: AddSupplierProductCall;

  constructor(call: AddSupplierProductCall) {
    this._call = call;
  }
}

export class DeleteSupplierProductCall extends ethereum.Call {
  get inputs(): DeleteSupplierProductCall__Inputs {
    return new DeleteSupplierProductCall__Inputs(this);
  }

  get outputs(): DeleteSupplierProductCall__Outputs {
    return new DeleteSupplierProductCall__Outputs(this);
  }
}

export class DeleteSupplierProductCall__Inputs {
  _call: DeleteSupplierProductCall;

  constructor(call: DeleteSupplierProductCall) {
    this._call = call;
  }

  get _spId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteSupplierProductCall__Outputs {
  _call: DeleteSupplierProductCall;

  constructor(call: DeleteSupplierProductCall) {
    this._call = call;
  }
}

export class UpdateSupplierProductUintsCall extends ethereum.Call {
  get inputs(): UpdateSupplierProductUintsCall__Inputs {
    return new UpdateSupplierProductUintsCall__Inputs(this);
  }

  get outputs(): UpdateSupplierProductUintsCall__Outputs {
    return new UpdateSupplierProductUintsCall__Outputs(this);
  }
}

export class UpdateSupplierProductUintsCall__Inputs {
  _call: UpdateSupplierProductUintsCall;

  constructor(call: UpdateSupplierProductUintsCall) {
    this._call = call;
  }

  get _spId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateSupplierProductUintsCall__Outputs {
  _call: UpdateSupplierProductUintsCall;

  constructor(call: UpdateSupplierProductUintsCall) {
    this._call = call;
  }
}
