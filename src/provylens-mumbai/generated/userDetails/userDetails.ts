// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class eventDeleteUser extends ethereum.Event {
  get params(): eventDeleteUser__Params {
    return new eventDeleteUser__Params(this);
  }
}

export class eventDeleteUser__Params {
  _event: eventDeleteUser;

  constructor(event: eventDeleteUser) {
    this._event = event;
  }

  get _address(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class eventUserData extends ethereum.Event {
  get params(): eventUserData__Params {
    return new eventUserData__Params(this);
  }
}

export class eventUserData__Params {
  _event: eventUserData;

  constructor(event: eventUserData) {
    this._event = event;
  }

  get _address(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _type(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get _name(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _physicalAddress(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get _image(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get _timeUpdated(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class userDetails__getAllDistributorsResultValue0Struct extends ethereum.Tuple {
  get userType(): i32 {
    return this[0].toI32();
  }

  get userName(): Bytes {
    return this[1].toBytes();
  }

  get userPhysicalAddress(): Bytes {
    return this[2].toBytes();
  }

  get userImage(): Bytes {
    return this[3].toBytes();
  }

  get userStatus(): boolean {
    return this[4].toBoolean();
  }
}

export class userDetails__getAllManufacturersResultValue0Struct extends ethereum.Tuple {
  get userType(): i32 {
    return this[0].toI32();
  }

  get userName(): Bytes {
    return this[1].toBytes();
  }

  get userPhysicalAddress(): Bytes {
    return this[2].toBytes();
  }

  get userImage(): Bytes {
    return this[3].toBytes();
  }

  get userStatus(): boolean {
    return this[4].toBoolean();
  }
}

export class userDetails__getAllSuppliersResultValue0Struct extends ethereum.Tuple {
  get userType(): i32 {
    return this[0].toI32();
  }

  get userName(): Bytes {
    return this[1].toBytes();
  }

  get userPhysicalAddress(): Bytes {
    return this[2].toBytes();
  }

  get userImage(): Bytes {
    return this[3].toBytes();
  }

  get userStatus(): boolean {
    return this[4].toBoolean();
  }
}

export class userDetails__getAllUsersResultValue0Struct extends ethereum.Tuple {
  get userType(): i32 {
    return this[0].toI32();
  }

  get userName(): Bytes {
    return this[1].toBytes();
  }

  get userPhysicalAddress(): Bytes {
    return this[2].toBytes();
  }

  get userImage(): Bytes {
    return this[3].toBytes();
  }

  get userStatus(): boolean {
    return this[4].toBoolean();
  }
}

export class userDetails__getSingleUserResultValue0Struct extends ethereum.Tuple {
  get userType(): i32 {
    return this[0].toI32();
  }

  get userName(): Bytes {
    return this[1].toBytes();
  }

  get userPhysicalAddress(): Bytes {
    return this[2].toBytes();
  }

  get userImage(): Bytes {
    return this[3].toBytes();
  }

  get userStatus(): boolean {
    return this[4].toBoolean();
  }
}

export class userDetails__userDetailsMappingResult {
  value0: i32;
  value1: Bytes;
  value2: Bytes;
  value3: Bytes;
  value4: boolean;

  constructor(
    value0: i32,
    value1: Bytes,
    value2: Bytes,
    value3: Bytes,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    map.set("value2", ethereum.Value.fromBytes(this.value2));
    map.set("value3", ethereum.Value.fromBytes(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getUserType(): i32 {
    return this.value0;
  }

  getUserName(): Bytes {
    return this.value1;
  }

  getUserPhysicalAddress(): Bytes {
    return this.value2;
  }

  getUserImage(): Bytes {
    return this.value3;
  }

  getUserStatus(): boolean {
    return this.value4;
  }
}

export class userDetails extends ethereum.SmartContract {
  static bind(address: Address): userDetails {
    return new userDetails("userDetails", address);
  }

  distributors(param0: BigInt): Address {
    let result = super.call("distributors", "distributors(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_distributors(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "distributors",
      "distributors(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllDistributors(): Array<
    userDetails__getAllDistributorsResultValue0Struct
  > {
    let result = super.call(
      "getAllDistributors",
      "getAllDistributors():((uint8,bytes,bytes,bytes,bool)[])",
      []
    );

    return result[0].toTupleArray<
      userDetails__getAllDistributorsResultValue0Struct
    >();
  }

  try_getAllDistributors(): ethereum.CallResult<
    Array<userDetails__getAllDistributorsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllDistributors",
      "getAllDistributors():((uint8,bytes,bytes,bytes,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<userDetails__getAllDistributorsResultValue0Struct>()
    );
  }

  getAllManufacturers(): Array<
    userDetails__getAllManufacturersResultValue0Struct
  > {
    let result = super.call(
      "getAllManufacturers",
      "getAllManufacturers():((uint8,bytes,bytes,bytes,bool)[])",
      []
    );

    return result[0].toTupleArray<
      userDetails__getAllManufacturersResultValue0Struct
    >();
  }

  try_getAllManufacturers(): ethereum.CallResult<
    Array<userDetails__getAllManufacturersResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllManufacturers",
      "getAllManufacturers():((uint8,bytes,bytes,bytes,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        userDetails__getAllManufacturersResultValue0Struct
      >()
    );
  }

  getAllSuppliers(): Array<userDetails__getAllSuppliersResultValue0Struct> {
    let result = super.call(
      "getAllSuppliers",
      "getAllSuppliers():((uint8,bytes,bytes,bytes,bool)[])",
      []
    );

    return result[0].toTupleArray<
      userDetails__getAllSuppliersResultValue0Struct
    >();
  }

  try_getAllSuppliers(): ethereum.CallResult<
    Array<userDetails__getAllSuppliersResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllSuppliers",
      "getAllSuppliers():((uint8,bytes,bytes,bytes,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<userDetails__getAllSuppliersResultValue0Struct>()
    );
  }

  getAllUsers(): Array<userDetails__getAllUsersResultValue0Struct> {
    let result = super.call(
      "getAllUsers",
      "getAllUsers():((uint8,bytes,bytes,bytes,bool)[])",
      []
    );

    return result[0].toTupleArray<userDetails__getAllUsersResultValue0Struct>();
  }

  try_getAllUsers(): ethereum.CallResult<
    Array<userDetails__getAllUsersResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllUsers",
      "getAllUsers():((uint8,bytes,bytes,bytes,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<userDetails__getAllUsersResultValue0Struct>()
    );
  }

  getSingleUser(
    _address: Address
  ): userDetails__getSingleUserResultValue0Struct {
    let result = super.call(
      "getSingleUser",
      "getSingleUser(address):((uint8,bytes,bytes,bytes,bool))",
      [ethereum.Value.fromAddress(_address)]
    );

    return changetype<userDetails__getSingleUserResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getSingleUser(
    _address: Address
  ): ethereum.CallResult<userDetails__getSingleUserResultValue0Struct> {
    let result = super.tryCall(
      "getSingleUser",
      "getSingleUser(address):((uint8,bytes,bytes,bytes,bool))",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<userDetails__getSingleUserResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  manufacturers(param0: BigInt): Address {
    let result = super.call(
      "manufacturers",
      "manufacturers(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_manufacturers(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "manufacturers",
      "manufacturers(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  suppliers(param0: BigInt): Address {
    let result = super.call("suppliers", "suppliers(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_suppliers(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("suppliers", "suppliers(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userDetailsMapping(param0: Address): userDetails__userDetailsMappingResult {
    let result = super.call(
      "userDetailsMapping",
      "userDetailsMapping(address):(uint8,bytes,bytes,bytes,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new userDetails__userDetailsMappingResult(
      result[0].toI32(),
      result[1].toBytes(),
      result[2].toBytes(),
      result[3].toBytes(),
      result[4].toBoolean()
    );
  }

  try_userDetailsMapping(
    param0: Address
  ): ethereum.CallResult<userDetails__userDetailsMappingResult> {
    let result = super.tryCall(
      "userDetailsMapping",
      "userDetailsMapping(address):(uint8,bytes,bytes,bytes,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new userDetails__userDetailsMappingResult(
        value[0].toI32(),
        value[1].toBytes(),
        value[2].toBytes(),
        value[3].toBytes(),
        value[4].toBoolean()
      )
    );
  }

  users(param0: BigInt): Address {
    let result = super.call("users", "users(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_users(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("users", "users(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddUserCall extends ethereum.Call {
  get inputs(): AddUserCall__Inputs {
    return new AddUserCall__Inputs(this);
  }

  get outputs(): AddUserCall__Outputs {
    return new AddUserCall__Outputs(this);
  }
}

export class AddUserCall__Inputs {
  _call: AddUserCall;

  constructor(call: AddUserCall) {
    this._call = call;
  }

  get _type(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _name(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _physicalAddress(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _image(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddUserCall__Outputs {
  _call: AddUserCall;

  constructor(call: AddUserCall) {
    this._call = call;
  }
}

export class DeleteUserCall extends ethereum.Call {
  get inputs(): DeleteUserCall__Inputs {
    return new DeleteUserCall__Inputs(this);
  }

  get outputs(): DeleteUserCall__Outputs {
    return new DeleteUserCall__Outputs(this);
  }
}

export class DeleteUserCall__Inputs {
  _call: DeleteUserCall;

  constructor(call: DeleteUserCall) {
    this._call = call;
  }
}

export class DeleteUserCall__Outputs {
  _call: DeleteUserCall;

  constructor(call: DeleteUserCall) {
    this._call = call;
  }
}

export class EditImageCall extends ethereum.Call {
  get inputs(): EditImageCall__Inputs {
    return new EditImageCall__Inputs(this);
  }

  get outputs(): EditImageCall__Outputs {
    return new EditImageCall__Outputs(this);
  }
}

export class EditImageCall__Inputs {
  _call: EditImageCall;

  constructor(call: EditImageCall) {
    this._call = call;
  }

  get _image(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class EditImageCall__Outputs {
  _call: EditImageCall;

  constructor(call: EditImageCall) {
    this._call = call;
  }
}

export class EditNameCall extends ethereum.Call {
  get inputs(): EditNameCall__Inputs {
    return new EditNameCall__Inputs(this);
  }

  get outputs(): EditNameCall__Outputs {
    return new EditNameCall__Outputs(this);
  }
}

export class EditNameCall__Inputs {
  _call: EditNameCall;

  constructor(call: EditNameCall) {
    this._call = call;
  }

  get _name(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class EditNameCall__Outputs {
  _call: EditNameCall;

  constructor(call: EditNameCall) {
    this._call = call;
  }
}

export class EditPhysicalAddressCall extends ethereum.Call {
  get inputs(): EditPhysicalAddressCall__Inputs {
    return new EditPhysicalAddressCall__Inputs(this);
  }

  get outputs(): EditPhysicalAddressCall__Outputs {
    return new EditPhysicalAddressCall__Outputs(this);
  }
}

export class EditPhysicalAddressCall__Inputs {
  _call: EditPhysicalAddressCall;

  constructor(call: EditPhysicalAddressCall) {
    this._call = call;
  }

  get _physicalAddress(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class EditPhysicalAddressCall__Outputs {
  _call: EditPhysicalAddressCall;

  constructor(call: EditPhysicalAddressCall) {
    this._call = call;
  }
}
